<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\SoftDeletes;

class PollItem extends Model
{
    use HasFactory, SoftDeletes;

    protected $table = 'poll_items';

    protected $guarded = ['id'];

    protected $withCount = ['userItems'];


    public function poll(): BelongsTo
    {
        return $this->belongsTo(Poll::class);
    }

    public function userItems(): HasMany
    {
        return $this->hasMany(PollUserItem::class, 'poll_item_id');
    }

    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub
        static::deleting(function ($item) {
            $item->userItems->each(function ($i) { //edit after comment
                $i->delete();
            });
        });
    }


    public function statis()
    {
        $total_poll_votes = $this->poll->userVotes->count();
        $item_votes = $this->userItems->count();
        return ($total_poll_votes > 0) ? ($item_votes / $total_poll_votes) * 100 : 0;
    }
}

<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\HasManyThrough;
use Illuminate\Database\Eloquent\Relations\HasOneThrough;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;

class Poll extends Model
{
    use HasFactory, SoftDeletes;

    protected $table = 'polls';
    protected $guarded = ['id'];

    public function items()
    {
        return $this->hasMany(PollItem::class);
    }

    public function userIsVoted()
    {
        return $this->items()
            ->where('poll_id', $this->id)
            ->whereHas('userItems', function (Builder $q) {
                $q->where('user_id', Auth::id());
            })
            ->exists();
    }

    public function userVotes(): HasManyThrough
    {
        return $this->hasManyThrough(
            PollUserItem::class,
            PollItem::class,
            'poll_id',
            'poll_item_id',
        );
    }

    protected static function booted()
    {
        parent::booted(); // TODO: Change the autogenerated stub
        static::deleting(function ($poll) {
            $poll->items->each(function ($item) { //edit after comment
                $item->delete();
            });
        });

    }
}
